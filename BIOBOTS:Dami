#include <Arduino.h>
#include <Servo.h>

// -------------------- Pin map --------------------
const int shoulderPin = 9;
const int elbowPin    = 10;
const int gripperPin  = 11;

// -------------------- Servos ---------------------
Servo shoulder;
Servo elbow;
Servo gripper;

// -------------------- Current states -------------
int shoulderAngle = 97;
int elbowAngle    = 90;
int gripperOpen   = 120;   // fully open
int gripperClosed = 160;   // pinch tight
int gripperAngle  = gripperOpen;

/* ------------------------------------------------
   Setup
------------------------------------------------- */
void setup() {
  Serial.begin(9600);

  shoulder.attach(shoulderPin);
  elbow.attach(elbowPin);

  // Attach gripper and move to safe open angle immediately
  gripper.attach(gripperPin);
  gripper.write(gripperOpen);
  gripperAngle = gripperOpen;
  delay(500);                        // let it settle

  // Move shoulder & elbow to their start positions
  shoulder.write(shoulderAngle);
  elbow.write(elbowAngle);
}

/* ------------------------------------------------
   Main loop
------------------------------------------------- */
void loop() {
  if (Serial.available()) {
    String input = Serial.readStringUntil('\n');
    input.trim();

    /* -------- Pinch command -------- */
    if (input.equalsIgnoreCase("P")) {
      pinchOnce();
      Serial.println("ü§è Pinch complete!");
      return;                         // done with this iteration
    }

    /* -------- 2-servo position update --------
       Format: 6 digits, e.g. "097090"
       0-2 ‚Üí shoulder, 3-5 ‚Üí elbow
    */
    if (input.length() == 6) {
      int newShoulder = input.substring(0, 3).toInt();
      int newElbow    = input.substring(3, 6).toInt();

      moveJoint(shoulder, shoulderAngle, newShoulder);
      moveJoint(elbow,    elbowAngle,    newElbow);

      shoulderAngle = newShoulder;
      elbowAngle    = newElbow;

      Serial.println("‚úÖ Moved shoulder & elbow!");
    } else {
      Serial.println("‚ùå Wrong input! Send 6 digits (e.g. 097090) or 'P' to pinch.");
    }
  }
}

/* ------------------------------------------------
   Helper functions
------------------------------------------------- */
void moveJoint(Servo &motor, int current, int target) {
  while (current != target) {
    current += (current < target) ? 1 : -1;
    motor.write(current);
    delay(15);
  }
}

void pinchOnce() {
  // Close
  moveJoint(gripper, gripperAngle, gripperClosed);
  gripperAngle = gripperClosed;
  delay(300);                         // hold pinch briefly

  // Open
  moveJoint(gripper, gripperClosed, gripperOpen);
  gripperAngle = gripperOpen;
}
