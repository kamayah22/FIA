#include <Arduino.h>
#include <Servo.h>
#include <Stepper.h>

// Pins for stepper motor (base rotation)
const int basePin1 = 2;
const int basePin2 = 3;
const int basePin3 = 4;
const int basePin4 = 5;

// Pins for servo motors
const int shoulderPin = 9;
const int elbowPin = 10;
const int gripperPin = 11;

// Stepper motor setup
const int stepsPerRevolution = 2048;
Stepper baseMotor(stepsPerRevolution, basePin1, basePin3, basePin2, basePin4);

// Servo motors
Servo shoulder;
Servo elbow;
Servo gripper;

// Current angles
int baseAngle = 0;
int shoulderAngle = 97;
int elbowAngle = 90;
int gripperAngle = 160;

void setup() {
  Serial.begin(9600);

  shoulder.attach(shoulderPin);
  elbow.attach(elbowPin);
  gripper.attach(gripperPin);

  baseMotor.setSpeed(10);

  shoulder.write(shoulderAngle);
  elbow.write(elbowAngle);
  gripper.write(gripperAngle);
}

void loop() {
  // Wait for input from Serial
  if (Serial.available() >= 12) {
    String input = Serial.readStringUntil('\n');
    input.trim();

    if (input.length() == 12) {
      int newBase = input.substring(0, 3).toInt();
      int newShoulder = input.substring(3, 6).toInt();
      int newElbow = input.substring(6, 9).toInt();
      int newGripper = input.substring(9, 12).toInt();

      moveBase(newBase);
      moveJoint(shoulder, shoulderAngle, newShoulder);
      moveJoint(elbow, elbowAngle, newElbow);
      moveJoint(gripper, gripperAngle, newGripper);

      // Update current angles
      baseAngle = newBase;
      shoulderAngle = newShoulder;
      elbowAngle = newElbow;
      gripperAngle = newGripper;

      Serial.println("✅ Moved all joints!");
    } else {
      Serial.println("❌ Wrong input! Use 12 digits like 360090045160");
    }
  }
}

// Move one servo motor smoothly
void moveJoint(Servo motor, int current, int target) {
  while (current != target) {
    if (current < target) current++;
    else current--;
    motor.write(current);
    delay(15);
  }
}

// Move the base stepper motor
void moveBase(int newAngle) {
  int stepsToMove = (stepsPerRevolution / 360) * (newAngle - baseAngle);
  baseMotor.step(stepsToMove);
  // Turn off stepper to prevent overheating
  digitalWrite(basePin1, LOW);
  digitalWrite(basePin2, LOW);
  digitalWrite(basePin3, LOW);
  digitalWrite(basePin4, LOW);
}
